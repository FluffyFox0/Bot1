[null,{"name":"help","permissions":"NONE","restriction":"1","actions":[{"channel":"0","varName":"","message":"Komendy:\n!","storage":"0","varName2":"","name":"Send Message"}]},{"name":"rolemenu","permissions":"NONE","restriction":"1","actions":[{"channel":"0","varName":"","message":"{\n  \"name\": \"rolemenu\",\n  \"permissions\": \"NONE\",\n  \"restriction\": \"1\",\n  \"_id\": \"DtBMG\",\n  \"actions\": [\n    {\n      \"member\": \"1\",\n      \"varName\": \"\",\n      \"permission\": \"MANAGE_ROLES\",\n      \"iftrue\": \"0\",\n      \"iftrueVal\": \"\",\n      \"iffalse\": \"1\",\n      \"iffalseVal\": \"\",\n      \"name\": \"Check Member Permissions\"\n    },\n    {\n      \"info\": \"19\",\n      \"storage\": \"1\",\n      \"varName2\": \"botPrefix\",\n      \"name\": \"Store Bot Client Info\"\n    },\n    {\n      \"behavior\": \"1\",\n      \"interpretation\": \"1\",\n      \"code\": \"const botPrefix = tempVars('botPrefix');\\nvar reactionArray = [];\\nvar rectarray = globalVars('reactionRoleInf');\\nconst _this = this;\\nvar tempRole;\\nvar emojiArray = [];\\nvar roleArray = [];\\n\\nmsg.channel.send(`Welcome to the autrole promt.\\\\nPlease now mention/name a role (case sensitive) along with an emoji.\\\\nEx. @role/role âœ…`)\\n    .then((message) => {\\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\\n                max: 1,\\n                time: 60000,\\n                errors: ['time'],\\n            })\\n            .then(async function(collected) {\\n                msg.author.lastMessage.delete();\\n                if (collected.first().content.split(/ +/g).length > 1) {\\n                    if (collected.first().content.split(/ +/g)[0] != null) {\\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\\n                            var roleMentioned;\\n                            if (collected.first().mentions.roles.first() != null) {\\n                                roleMentioned = collected.first().mentions.roles.first();\\n                            } else {\\n                                roleMentioned = tstValidRole;\\n                            }\\n                            if (unicodeStored.charCodeAt(0 > 127)) {\\n                                reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\\n                                emojiArray.push(unicodeStored);\\n                                roleArray.push(roleMentioned.id);\\n                                message.edit(`You have attached the role **${roleMentioned.name}** to the reaction ${unicodeStored}.\\\\nIf this is correct, please respond \\\"confirm\\\".\\\\nIf not, please respond \\\"cancel\\\" to cancel the prompt.`);\\n                                msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\\n                                        max: 1,\\n                                        time: 60000,\\n                                        errors: ['time'],\\n                                    })\\n                                    .then((collected) => {\\n                                        msg.author.lastMessage.delete();\\n                                        if (collected.first().content.toLowerCase() == \\\"confirm\\\") {\\n                                            reAsk(message)\\n                                        } else if (collected.first().content.toLowerCase() == \\\"cancel\\\") {\\n                                            message.delete();\\n                                            msg.channel.send(\\\"Prompt has been cancelled.\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                                        } else {\\n                                            message.delete();\\n                                            msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a valid response!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                                        }\\n                                    }).catch(() => {\\n                                        message.delete();\\n                                        msg.channel.send('Sorry, you didnt provide a valid response in time!\\\\nPlease re-execute the command to go through the prompt again!');\\n                                    });\\n                            } else {\\n                                message.delete();\\n                                msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a valid emoji!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                            }\\n\\n                        } else {\\n                            message.delete();\\n                            msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a valid response!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                        }\\n                    } else {\\n                        message.delete();\\n                        msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a valid mentioned role!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                    }\\n                } else {\\n                    message.delete();\\n                    msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                }\\n            }).catch((error) => {\\n                console.log(error);\\n                message.delete();\\n                msg.channel.send('Sorry, you didnt provide a valid response in time!\\\\nPlease re-execute the command to go through the prompt again!');\\n            });\\n    })\\n\\nfunction reAsk(message) {\\n    if (reactionArray.length != 10) {\\n        var finalText = \\\"\\\";\\n        reactionArray.forEach(subarray => {\\n            finalText = finalText + `${subarray[0]} => ${subarray[2]}\\\\n`\\n        })\\n        message.edit(`So far you have the following connections (Max 10)\\\\n ${finalText}\\\\n\\\\nIf you would like to attach another reaction to a role, please insert a role along with an emoji.\\\\nIf not, please reply with \\\"done\\\".\\\\nIf you would like to cancel the prompt, please respond with \\\"cancel\\\"`);\\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\\n                max: 1,\\n                time: 60000,\\n                errors: ['time'],\\n            })\\n            .then(async function(collected) {\\n                msg.author.lastMessage.delete();\\n                if (collected.first().content.toLowerCase() == \\\"done\\\") {\\n                    done(message)\\n                } else if (collected.first().mentions.roles.first() == \\\"cancel\\\") {\\n                    message.delete();\\n                    msg.channel.send(\\\"Prompt has been cancelled.\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                } else {\\n                    if (collected.first().content.split(/ +/g).length > 1) {\\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\\n                            if (collected.first().mentions.roles.first() != null) {\\n                                roleMentioned = collected.first().mentions.roles.first();\\n                            } else {\\n                                roleMentioned = tstValidRole;\\n                            }\\n                            if (unicodeStored != null) {\\n                                if (!emojiArray.includes(unicodeStored)) {\\n                                    if (!roleArray.includes(roleMentioned.id)) {\\n                                        if (unicodeStored.charCodeAt(0 > 127)) {\\n                                            reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\\n                                            emojiArray.push(unicodeStored);\\n                                            roleArray.push(roleMentioned.id);\\n                                            reAsk(message)\\n                                        } else {\\n                                            message.delete();\\n                                            msg.channel.send(\\\"Prompt has been cancelled, you used the same emoji twice for differnt roles!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                                        }\\n                                    } else {\\n                                        message.delete();\\n                                        msg.channel.send(\\\"Prompt has been cancelled, you used the same role twice in the prompt!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                                    }\\n                                } else {\\n                                    message.delete();\\n                                    msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a valid emoji!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                                }\\n                            }\\n                        } else {\\n                            message.delete();\\n                            msg.channel.send(\\\"Prompt has been cancelled, you didn't mention a valid role!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                        }\\n                    } else {\\n                        message.delete();\\n                        msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n                    }\\n                }\\n            }).catch(() => {\\n                message.delete();\\n                msg.channel.send('Sorry, you didnt provide a valid response in time!\\\\nPlease re-execute the command to go through the prompt again!');\\n            });\\n    } else {\\n        done(message);\\n    }\\n\\n}\\n\\nfunction done(message) {\\n    var finalText = \\\"\\\";\\n    reactionArray.forEach(subarray => {\\n        finalText = finalText + `${subarray[0]} => ${subarray[2]}\\\\n`\\n    })\\n    message.edit(`Final conformation menu\\\\n\\\\nBelow is the list of reactions to their roles\\\\n${finalText}\\\\n\\\\nIf this is correct, please respond with a mention to a text channel where the role menu will be sent.\\\\nIf this isn't correct, respond with \\\"cancel\\\" to cancel the prompt.`)\\n    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\\n            max: 1,\\n            time: 60000,\\n            errors: ['time'],\\n        })\\n        .then((collected) => {\\n            msg.author.lastMessage.delete();\\n            if (collected.first().mentions.channels.first()) {\\n                var menchannel = collected.first().mentions.channels.first()\\n                message.delete();\\n                menchannel.send({\\n                        embed: {\\n                            color: 0xffff00,\\n                            title: \\\"Role Reaction Menu\\\",\\n                            description: `React with the reaction listed to get the listed role for that reaction.\\\\n${finalText}`,\\n                            timestamp: new Date()\\n                        }\\n                    })\\n                    .then(embedmessage => {\\n                        reactionArray.forEach(async function(subarray) {\\n                            await embedmessage.react(subarray[0])\\n                        })\\n                        rectarray.push({\\n                            [embedmessage.id]: reactionArray\\n                        })\\n                        _this.storeValue(rectarray, 3, \\\"reactionRoleInf\\\", cache);\\n                        _this.callNextAction(cache);\\n                    })\\n            } else if (collected.first().content == \\\"cancel\\\") {\\n                message.delete();\\n                msg.channel.send(\\\"Prompt has been cancelled.\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n            } else {\\n                message.delete();\\n                msg.channel.send(\\\"Prompt has been cancelled, you didn't provide a valid response!\\\\nPlease re-execute the command to go through the prompt again!\\\");\\n            }\\n        }).catch(() => {\\n            message.delete();\\n            msg.channel.send('Sorry, you didnt provide a valid response in time!\\\\nPlease re-execute the command to go through the prompt again!');\\n        });\\n}\",\n      \"storage\": \"0\",\n      \"varName\": \"\",\n      \"name\": \"Run Script\"\n    },\n    {\n      \"behavior\": \"0\",\n      \"interpretation\": \"0\",\n      \"code\": \"var randomVar = JSON.stringify(globalVars(\\\"reactionRoleInf\\\"));\\n\\nthis.storeValue(randomVar, 3, 'tempData', cache);\",\n      \"storage\": \"0\",\n      \"varName\": \"\",\n      \"name\": \"Run Script\"\n    },\n    {\n      \"storage\": \"3\",\n      \"varName\": \"tempData\",\n      \"name\": \"Save Variable\"\n    }\n  ],\n  \"comType\": \"0\"\n}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"setuptch","permissions":"NONE","restriction":"1","actions":[{"channel":"0","varName":"","message":"{\n  \"name\": \"setuptch\",\n  \"permissions\": \"NONE\",\n  \"restriction\": \"1\",\n  \"_id\": \"RtpvK\",\n  \"actions\": [\n    {\n      \"member\": \"1\",\n      \"varName\": \"\",\n      \"permission\": \"ADMINISTRATOR\",\n      \"iftrue\": \"0\",\n      \"iftrueVal\": \"\",\n      \"iffalse\": \"2\",\n      \"iffalseVal\": \"8\",\n      \"name\": \"Check Member Permissions\"\n    },\n    {\n      \"channel\": \"1\",\n      \"varName\": \"\",\n      \"info\": \"0\",\n      \"storage\": \"1\",\n      \"varName2\": \"mentCh\",\n      \"name\": \"Store Channel Info\"\n    },\n    {\n      \"storage\": \"1\",\n      \"varName\": \"mentCh\",\n      \"comparison\": \"5\",\n      \"iftrue\": \"0\",\n      \"iftrueVal\": \"\",\n      \"iffalse\": \"2\",\n      \"iffalseVal\": \"10\",\n      \"name\": \"Check Variable Type\"\n    },\n    {\n      \"channel\": \"1\",\n      \"varName\": \"\",\n      \"info\": \"1\",\n      \"storage\": \"1\",\n      \"varName2\": \"chnID\",\n      \"name\": \"Store Channel Info\"\n    },\n    {\n      \"behavior\": \"0\",\n      \"interpretation\": \"1\",\n      \"code\": \"const fs = require('fs');\\nconst chnlID = tempVars('chnID');\\n\\nif(fs.existsSync('./resources/serverRoleMenu.json')) {\\n    fs.readFile('./resources/serverRoleMenu.json', function read(err, data) {\\n        if (err) {\\n            throw err;\\n        }\\n        \\n        var newData = JSON.parse(data);\\n        newData[msg.guild.id] = chnlID;\\n\\n        fs.writeFile('./resources/serverRoleMenu.json', JSON.stringify(newData), (err) => {  \\n            if (err) {\\n                console.log(err);\\n            }\\n        });\\n\\n    })\\n\\n} else {\\n    fs.writeFile('./resources/serverRoleMenu.json', '{}', (err) => {  \\n        if (err) {\\n            console.log(err);\\n        }\\n\\n        fs.readFile('./resources/serverRoleMenu.json', function read(err, data) {\\n            if (err) {\\n                throw err;\\n            }\\n    \\n            var newData = JSON.parse(data);\\n            newData[msg.guild.id] = chnlID;\\n    \\n            fs.writeFile('./resources/serverRoleMenu.json', JSON.stringify(newData), (err) => {  \\n                if (err) {\\n                    console.log(err);\\n                }\\n            });\\n        })\\n    });\\n}\",\n      \"storage\": \"0\",\n      \"varName\": \"\",\n      \"name\": \"Run Script\"\n    },\n    {\n      \"channel\": \"0\",\n      \"varName\": \"\",\n      \"message\": \":white_check_mark: Update channel set to ${tempVars(\\\"mentCh\\\")}\",\n      \"storage\": \"0\",\n      \"varName2\": \"\",\n      \"name\": \"Send Message\"\n    },\n    {\n      \"name\": \"End Action Sequence\"\n    },\n    {\n      \"channel\": \"0\",\n      \"varName\": \"\",\n      \"message\": \":x: You do not have permission to use this command!\",\n      \"storage\": \"0\",\n      \"varName2\": \"\",\n      \"name\": \"Send Message\"\n    },\n    {\n      \"name\": \"End Action Sequence\"\n    },\n    {\n      \"channel\": \"0\",\n      \"varName\": \"\",\n      \"message\": \":x: Please mention a channel!\",\n      \"storage\": \"0\",\n      \"varName2\": \"\",\n      \"name\": \"Send Message\"\n    }\n  ],\n  \"comType\": \"0\"\n}","storage":"0","varName2":"","name":"Send Message"}]}]